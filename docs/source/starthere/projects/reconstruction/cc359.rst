CC359
=====


**Training/Testing**

.. important::
    The ``CC359`` dataset is natively supported in ``atommic``. Therefore, you do not need to create a custom dataset
    class. You just need to set the ``dataset_format`` argument in the configuration file to ``CC359``. For example:

    .. code-block:: bash

        train_ds:
            dataset_format: cc359

        validation_ds:
            dataset_format: cc359

        test_ds:
            dataset_format: cc359

For training a model, you just need to set up the data and export paths to the
`configuration <https://github.com/wdika/atommic/tree/main/projects/reconstruction/CC359/conf/train/>`_
file of the model you want to train. In ``train_ds`` and `validation_ds` please set the ``data_path`` to the generated
json files. In ``exp_manager`` please set the ``exp_dir`` to the path where you want to save the model checkpoints and
tensorboard or wandb logs.

You can train a model with the following command:

.. code-block:: bash

    atommic run -c /projects/reconstruction/CC359/conf/train/{model}.yaml

For testing a model, you just need to set up the data and export paths to the
`configuration <https://github.com/wdika/atommic/tree/main/projects/reconstruction/CC359/conf/test/>`_ file
model you want to test. In ``checkpoint`` (line 2) set the path the trained model checkpoint and in ``test_ds`` please
set the ``data_path``. In ``exp_manager`` please set the ``exp_dir`` to the path where the predictions and logs will
be saved.

You can test a model with the following command:

.. code-block:: bash

    atommic run -c /projects/reconstruction/CC359/conf/test/{model}.yaml

**Note:** The default logger is tensorboard.
