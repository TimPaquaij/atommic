# coding=utf-8

# Generated by CodiumAI

import pytest
import torch

from atommic.collections.common.parts.transforms import Cropper


class TestCropper:
    # Tests that cropping is applied correctly on a tensor with default parameters.
    def test_cropping_default_parameters(self):
        data = torch.randn(1, 15, 320, 320, 2)
        cropping = Cropper(cropping_size=(256, 256), spatial_dims=(-2, -1))
        cropped_data = cropping(data)
        assert cropped_data.shape == (1, 15, 256, 256, 2)

    # Tests that cropping is applied correctly on a tensor with fft_centered=True.
    def test_cropping_fft_centered(self):
        data = torch.randn(1, 15, 320, 320, 2)
        cropping = Cropper(cropping_size=(256, 256), fft_centered=True, spatial_dims=(-2, -1))
        cropped_data = cropping(data)
        assert cropped_data.shape == (1, 15, 256, 256, 2)

    # Tests that cropping is applied correctly on a tensor with fft_normalization='forward'.
    def test_cropping_fft_normalization(self):
        data = torch.randn(1, 15, 320, 320, 2)
        cropping = Cropper(cropping_size=(256, 256), fft_normalization="forward", spatial_dims=(-2, -1))
        cropped_data = cropping(data)
        assert cropped_data.shape == (1, 15, 256, 256, 2)

    # Tests that cropping is applied correctly on a small tensor with cropping_size=(200, 200).
    def test_cropping_small_tensor(self):
        data = torch.randn(1, 15, 200, 200, 2)
        cropping = Cropper(cropping_size=(256, 256), spatial_dims=(-2, -1))
        cropped_data = cropping(data)
        assert cropped_data.shape == (1, 15, 200, 200, 2)
